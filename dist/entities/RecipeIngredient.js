"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecipeIngredient = void 0;
const typeorm_1 = require("typeorm");
const Recipe_1 = require("./Recipe");
const Ingredient_1 = require("./Ingredient");
let RecipeIngredient = class RecipeIngredient {
};
exports.RecipeIngredient = RecipeIngredient;
__decorate([
    (0, typeorm_1.PrimaryGeneratedColumn)(),
    __metadata("design:type", Number)
], RecipeIngredient.prototype, "id", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => Recipe_1.Recipe, (r) => r.ingredients, { onDelete: 'CASCADE' }) //rows in this table are removed when a recipe is deleted
    ,
    __metadata("design:type", Recipe_1.Recipe)
], RecipeIngredient.prototype, "recipe", void 0);
__decorate([
    (0, typeorm_1.ManyToOne)(() => Ingredient_1.Ingredient, (i) => i.recipeIngredients) //no cascade-delete ingredients to prevent accidental deletion
    ,
    __metadata("design:type", Ingredient_1.Ingredient)
], RecipeIngredient.prototype, "ingredient", void 0);
__decorate([
    (0, typeorm_1.Column)('decimal', { precision: 10, scale: 2, nullable: true }) // 10 digits in total, 2 after the decimal point
    ,
    __metadata("design:type", Number)
], RecipeIngredient.prototype, "quantity", void 0);
__decorate([
    (0, typeorm_1.Column)({ nullable: true }),
    __metadata("design:type", String)
], RecipeIngredient.prototype, "unit", void 0);
__decorate([
    (0, typeorm_1.Column)(),
    __metadata("design:type", Number)
], RecipeIngredient.prototype, "indexNumber", void 0);
exports.RecipeIngredient = RecipeIngredient = __decorate([
    (0, typeorm_1.Entity)()
], RecipeIngredient);
// Joint table between Recipe and Ingredient
// RecipeIngredient: id, recipeId, ingredientId, quantity, unit
// + ManyToOne relationship with Recipe and Ingredient
// recipeId, ingredientId: Foreign keys are generated by TypeORM automatically
